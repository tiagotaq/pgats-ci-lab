#CI de NÃ­vel 01 - Disparo manual a partir de 1 clique

#nome do nosso 'pipeline'
name: 'ExecuÃ§Ã£o Manual (Self Hosted)'

# regras de disparo (gatilhos/triggers)
# gatilho de exec manual = workflow_dispatch

on: 
  workflow_dispatch:

# trabalhos/tarefas dentro do pipeline = jobs
jobs: 
  e2e-tests:

  #maquina que o job vai executar
    runs-on: self-hosted

    # passos do script de build
    steps:
      #clone do projeto
      - uses: actions/checkout@v4

      #instalaÃ§Ã£o do node
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x

      #instalaÃ§Ã£o do Yarn
      - name: Instalando Yarn
        run: npm install -g yarn
      
      #instalaÃ§Ã£o das dependÃªncias
      - name: Instalando dependÃªncias
        run: yarn

      #instalaÃ§Ã£o do Playwright
      - name: Instalando Playwright
        run: yarn playwright install

      #executar os testes e2e
      - name: Executando testes e2e
        run: yarn run e2e

      - name: Enviar mensagem no Telegram
        if: always()
        shell: powershell
        run: |
          $status = "${{ job.status }}"
          $message = "ðŸš€ CI finalizado com status: *$status*`nRepositÃ³rio: ${{ github.repository }}`nBranch: ${{ github.ref_name }}`nCommit: ${{ github.sha }}"
          
          Invoke-RestMethod -Uri "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" `
            -Method Post `
            -Body @{
              chat_id = "${{ secrets.TELEGRAM_CHAT_ID }}"
              parse_mode = "Markdown"
              text = $message
            }
      
      - name: Enviar mensagem no Discord
        if: always()
        shell: powershell
        run: |
          $status = "${{ job.status }}"
          $color = 3066993
          if ($status -eq "failure") {
            $color = 15158332
          }

          $embed = @{
            title = "ðŸš€ CI finalizado"
            description = "Status: **$status**`nRepositÃ³rio: `${{ github.repository }}``nBranch: `${{ github.ref_name }}``nCommit: `${{ github.sha }}`"
            color = $color
          }

          $payload = @{
            username = "GitHub Actions"
            embeds = @($embed)
          } | ConvertTo-Json -Depth 3

          Invoke-RestMethod `
            -Uri "${{ secrets.DISCORD_WEBHOOK_URL }}" `
            -Method POST `
            -ContentType "application/json" `
            -Body $payload


